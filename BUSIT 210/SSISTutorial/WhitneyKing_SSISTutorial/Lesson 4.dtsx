<?xml version="1.0"?>
<DTS:Executable
  DTS:refId="Package" xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:CreatorName="REDWOOD\Barry"
  DTS:CreatorComputerName="REDWOOD"
  DTS:CreationDate="6/9/2012 4:03:57 PM"
  DTS:PackageType="5"
  DTS:VersionBuild="9"
  DTS:VersionGUID="{5C6AEA3E-DDFD-4AAF-9399-E3E43F4B1150}"
  DTS:LastModifiedProductVersion="11.0.2100.60"
  DTS:LocaleID="1033"
  DTS:ObjectName="Lesson 4"
  DTS:DTSID="{48CB94D1-4574-43B9-819B-A3E80D6B375E}"
  DTS:CreationName="SSIS.Package.3">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Error Data]"
      DTS:ObjectName="Error Data"
      DTS:DTSID="{8823D06C-1436-4A3B-AF20-A974B6D646D6}"
      DTS:CreationName="FLATFILE">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\Development\SQL Projects\1.SSIS Tutorial\Logs\ErrorOutput.txt">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="4"
              DTS:TextQualified="True"
              DTS:ObjectName="AverageRate"
              DTS:DTSID="{FCE78A86-7C63-4F06-8884-C3D3F806E97D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="3"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="CurrencyID"
              DTS:DTSID="{2C49F37E-9EC7-42D5-9DD6-000ED0EDCC5B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="133"
              DTS:TextQualified="True"
              DTS:ObjectName="CurrencyDate"
              DTS:DTSID="{BA90F45D-64DB-4E44-8F1F-19F489593702}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="4"
              DTS:TextQualified="True"
              DTS:ObjectName="EndOfDayRate"
              DTS:DTSID="{FE6B1751-B722-476D-998C-4D1AF181F074}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="ErrorCode"
              DTS:DTSID="{C1671E3F-916F-4BD7-9502-360C600A409D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="ErrorColumn"
              DTS:DTSID="{06997FE4-1E36-4E73-88A6-B0A65352FA27}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="ErrorDescription"
              DTS:DTSID="{3772D4EB-68DA-4D23-BCA1-5CD5BF1BE042}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[localhost.AdventureWorksDW2012]"
      DTS:ObjectName="localhost.AdventureWorksDW2012"
      DTS:DTSID="{7BD946EC-0F50-4FA0-BDFB-2196C9AEC6F4}"
      DTS:CreationName="OLEDB">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=localhost;Initial Catalog=AdventureWorksDW2012;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Sample Flat File Source Data]"
      DTS:ObjectName="Sample Flat File Source Data"
      DTS:DTSID="{877E3F46-9DFB-4B37-B316-59A2DA93AEA4}"
      DTS:CreationName="FLATFILE">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::varFileName]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="4"
              DTS:TextQualified="True"
              DTS:ObjectName="AverageRate"
              DTS:DTSID="{8A643D5A-C82E-4E17-8E50-3063F535D577}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="3"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="CurrencyID"
              DTS:DTSID="{A73503F0-6D05-4AD2-AEE0-CE9D1167ED79}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="133"
              DTS:TextQualified="True"
              DTS:ObjectName="CurrencyDate"
              DTS:DTSID="{DDCFD984-1ED5-4231-8835-E77C88A631B6}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="4"
              DTS:TextQualified="True"
              DTS:ObjectName="EndOfDayRate"
              DTS:DTSID="{7EC912AD-8F22-485D-B25F-63B2743D120F}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[TutorialLog.log]"
      DTS:ObjectName="TutorialLog.log"
      DTS:DTSID="{80766900-E76E-4BA4-9F1D-6647982B710B}"
      DTS:CreationName="FILE">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:FileUsageType="1"
          DTS:ConnectionString="C:\Development\SQL Projects\1.SSIS Tutorial\Logs\TutorialLog.log" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:LogProviders>
    <DTS:LogProvider
      DTS:ConfigString="TutorialLog.log"
      DTS:ObjectName="Lesson 3 Log File"
      DTS:DTSID="{ACAA7940-8990-42A1-96A4-56E2F4E72C9C}"
      DTS:Description="Writes log entries for events to a CSV file"
      DTS:CreationName="DTS.LogProviderTextFile.3">
      <DTS:ObjectData>
        <InnerObject />
      </DTS:ObjectData>
    </DTS:LogProvider>
  </DTS:LogProviders>
  <DTS:Variables>
    <DTS:Variable
      DTS:Namespace="User"
      DTS:IncludeInDebugDump="2345"
      DTS:ObjectName="varFileName"
      DTS:DTSID="{E3548C4E-B0F1-48B4-938B-FC36ED9A41B3}"
      DTS:CreationName="">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:LoggingMode="2"
    DTS:FilterKind="0" />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Foreach File in Folder"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach File in Folder"
      DTS:DTSID="{5E54B7FF-EE99-48C4-AD1A-FC87C8527A54}"
      DTS:Description="Foreach Loop Container"
      DTS:CreationName="STOCK:FOREACHLOOP">
      <DTS:ForEachEnumerator
        DTS:ObjectName="{ABD84B50-C8CC-4235-A3E6-D3F4F9E1E864}"
        DTS:DTSID="{ABD84B50-C8CC-4235-A3E6-D3F4F9E1E864}"
        DTS:CreationName="DTS.ForEachFileEnumerator.3">
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="C:\Program Files\Microsoft SQL Server\110\Samples\Integration Services\Tutorial\Creating a Simple ETL Package\Sample Data" />
            <FEFEProperty
              FileSpec="Currency_*.txt" />
            <FEFEProperty
              FileNameRetrievalType="0" />
            <FEFEProperty
              Recurse="0" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:LoggingMode="2"
        DTS:FilterKind="0" />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach File in Folder\Extract Sample Currency Data"
          DTS:ExecutableType="SSIS.Pipeline.3"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:LocaleID="-1"
          DTS:ObjectName="Extract Sample Currency Data"
          DTS:DTSID="{6C5ADA63-932C-49F1-AE54-2C287FBEC697}"
          DTS:Description="Data Flow Task"
          DTS:CreationName="SSIS.Pipeline.3">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:LoggingMode="1"
            DTS:FilterKind="0">
            <DTS:Property
              DTS:Name="EventFilter"
              DTS:DataType="8">2,21,PipelineExecutionPlan,22,PipelineExecutionTrees</DTS:Property>
            <DTS:Property
              DTS:Name="ColumnFilter"
              DTS:EventName="PipelineExecutionPlan">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:Name="ColumnFilter"
              DTS:EventName="PipelineExecutionTrees">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:SelectedLogProviders>
              <DTS:SelectedLogProvider
                DTS:InstanceID="{ACAA7940-8990-42A1-96A4-56E2F4E72C9C}" />
            </DTS:SelectedLogProviders>
          </DTS:LoggingOptions>
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data"
                  name="Extract Sample Currency Data"
                  componentClassID="{D23FD76B-F51D-420F-BBCB-19CBF6AC1AB4}"
                  description="Flat File Source"
                  localeId="1033"
                  usesDispositions="true"
                  version="1"
                  contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1">
                  <properties>
                    <property
                      name="RetainNulls"
                      dataType="System.Boolean"
                      description="Specifies whether zero-length columns are treated as null.">false</property>
                    <property
                      name="FileNameColumnName"
                      dataType="System.String"
                      description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Connections[FlatFileConnection]"
                      name="FlatFileConnection"
                      connectionManagerID="Package.ConnectionManagers[Sample Flat File Source Data]"
                      connectionManagerRefId="Package.ConnectionManagers[Sample Flat File Source Data]" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[Flat File Source Output]"
                      name="Flat File Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[Flat File Source Output].Columns[AverageRate]"
                          name="AverageRate"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[Flat File Source Output].Columns[AverageRate]"
                          dataType="r4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          truncationRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[Flat File Source Output].ExternalColumns[AverageRate]">
                          <properties>
                            <property
                              name="FastParse"
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines.">false</property>
                            <property
                              name="UseBinaryFormat"
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format.">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[Flat File Source Output].Columns[CurrencyID]"
                          name="CurrencyID"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[Flat File Source Output].Columns[CurrencyID]"
                          length="3"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          truncationRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[Flat File Source Output].ExternalColumns[CurrencyID]">
                          <properties>
                            <property
                              name="FastParse"
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines.">false</property>
                            <property
                              name="UseBinaryFormat"
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format.">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[Flat File Source Output].Columns[CurrencyDate]"
                          name="CurrencyDate"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[Flat File Source Output].Columns[CurrencyDate]"
                          dataType="dbDate"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          truncationRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[Flat File Source Output].ExternalColumns[CurrencyDate]">
                          <properties>
                            <property
                              name="FastParse"
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines.">false</property>
                            <property
                              name="UseBinaryFormat"
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format.">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[Flat File Source Output].Columns[EndOfDayRate]"
                          name="EndOfDayRate"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[Flat File Source Output].Columns[EndOfDayRate]"
                          dataType="r4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          truncationRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[Flat File Source Output].ExternalColumns[EndOfDayRate]">
                          <properties>
                            <property
                              name="FastParse"
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines.">false</property>
                            <property
                              name="UseBinaryFormat"
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format.">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[Flat File Source Output].ExternalColumns[AverageRate]"
                          name="AverageRate"
                          dataType="r4" />
                        <externalMetadataColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[Flat File Source Output].ExternalColumns[CurrencyID]"
                          name="CurrencyID"
                          dataType="wstr"
                          length="3" />
                        <externalMetadataColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[Flat File Source Output].ExternalColumns[CurrencyDate]"
                          name="CurrencyDate"
                          dataType="dbDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[Flat File Source Output].ExternalColumns[EndOfDayRate]"
                          name="EndOfDayRate"
                          dataType="r4" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[Flat File Source Error Output]"
                      name="Flat File Source Error Output"
                      isErrorOut="true">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          name="Flat File Source Error Output Column"
                          description="Flat File Source Error Output Column"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          dataType="text"
                          codePage="1252" />
                        <outputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach File in Folder\Extract Sample Currency Data\Failed Rows"
                  name="Failed Rows"
                  componentClassID="{8DA75FED-1B7C-407D-B2AD-2B24209CCCA4}"
                  description="Flat File Destination"
                  localeId="1033"
                  contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0">
                  <properties>
                    <property
                      name="Overwrite"
                      dataType="System.Boolean"
                      description="Specifies whether the data will overwrite or append to the destination file.">false</property>
                    <property
                      name="Header"
                      dataType="System.Null"
                      description="Specifies the text to write to the destination file before any data is written."
                      expressionType="Notify" />
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach File in Folder\Extract Sample Currency Data\Failed Rows.Connections[FlatFileConnection]"
                      name="FlatFileConnection"
                      connectionManagerID="Package.ConnectionManagers[Error Data]"
                      connectionManagerRefId="Package.ConnectionManagers[Error Data]" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach File in Folder\Extract Sample Currency Data\Failed Rows.Inputs[Flat File Destination Input]"
                      name="Flat File Destination Input"
                      hasSideEffects="true">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Failed Rows.Inputs[Flat File Destination Input].Columns[AverageRate]"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[Flat File Source Output].Columns[AverageRate]"
                          externalMetadataColumnId="Package\Foreach File in Folder\Extract Sample Currency Data\Failed Rows.Inputs[Flat File Destination Input].ExternalColumns[AverageRate]"
                          cachedName="AverageRate"
                          cachedDataType="r4" />
                        <inputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Failed Rows.Inputs[Flat File Destination Input].Columns[CurrencyID]"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[Flat File Source Output].Columns[CurrencyID]"
                          externalMetadataColumnId="Package\Foreach File in Folder\Extract Sample Currency Data\Failed Rows.Inputs[Flat File Destination Input].ExternalColumns[CurrencyID]"
                          cachedName="CurrencyID"
                          cachedDataType="wstr"
                          cachedLength="3" />
                        <inputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Failed Rows.Inputs[Flat File Destination Input].Columns[CurrencyDate]"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[Flat File Source Output].Columns[CurrencyDate]"
                          externalMetadataColumnId="Package\Foreach File in Folder\Extract Sample Currency Data\Failed Rows.Inputs[Flat File Destination Input].ExternalColumns[CurrencyDate]"
                          cachedName="CurrencyDate"
                          cachedDataType="dbDate" />
                        <inputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Failed Rows.Inputs[Flat File Destination Input].Columns[EndOfDayRate]"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[Flat File Source Output].Columns[EndOfDayRate]"
                          externalMetadataColumnId="Package\Foreach File in Folder\Extract Sample Currency Data\Failed Rows.Inputs[Flat File Destination Input].ExternalColumns[EndOfDayRate]"
                          cachedName="EndOfDayRate"
                          cachedDataType="r4" />
                        <inputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Failed Rows.Inputs[Flat File Destination Input].Columns[ErrorCode]"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Currency Key.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          externalMetadataColumnId="Package\Foreach File in Folder\Extract Sample Currency Data\Failed Rows.Inputs[Flat File Destination Input].ExternalColumns[ErrorCode]"
                          cachedName="ErrorCode"
                          cachedDataType="i4" />
                        <inputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Failed Rows.Inputs[Flat File Destination Input].Columns[ErrorColumn]"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Currency Key.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          externalMetadataColumnId="Package\Foreach File in Folder\Extract Sample Currency Data\Failed Rows.Inputs[Flat File Destination Input].ExternalColumns[ErrorColumn]"
                          cachedName="ErrorColumn"
                          cachedDataType="i4" />
                        <inputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Failed Rows.Inputs[Flat File Destination Input].Columns[ErrorDescription]"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Get Error Description.Outputs[Output 0].Columns[ErrorDescription]"
                          externalMetadataColumnId="Package\Foreach File in Folder\Extract Sample Currency Data\Failed Rows.Inputs[Flat File Destination Input].ExternalColumns[ErrorDescription]"
                          cachedName="ErrorDescription"
                          cachedDataType="wstr"
                          cachedLength="50" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Failed Rows.Inputs[Flat File Destination Input].ExternalColumns[AverageRate]"
                          name="AverageRate"
                          dataType="r4" />
                        <externalMetadataColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Failed Rows.Inputs[Flat File Destination Input].ExternalColumns[CurrencyID]"
                          name="CurrencyID"
                          dataType="wstr"
                          length="3" />
                        <externalMetadataColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Failed Rows.Inputs[Flat File Destination Input].ExternalColumns[CurrencyDate]"
                          name="CurrencyDate"
                          dataType="dbDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Failed Rows.Inputs[Flat File Destination Input].ExternalColumns[EndOfDayRate]"
                          name="EndOfDayRate"
                          dataType="r4" />
                        <externalMetadataColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Failed Rows.Inputs[Flat File Destination Input].ExternalColumns[ErrorCode]"
                          name="ErrorCode"
                          dataType="i4" />
                        <externalMetadataColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Failed Rows.Inputs[Flat File Destination Input].ExternalColumns[ErrorColumn]"
                          name="ErrorColumn"
                          dataType="i4" />
                        <externalMetadataColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Failed Rows.Inputs[Flat File Destination Input].ExternalColumns[ErrorDescription]"
                          name="ErrorDescription"
                          dataType="wstr"
                          length="50" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Foreach File in Folder\Extract Sample Currency Data\Get Error Description"
                  name="Get Error Description"
                  componentClassID="{874F7595-FB5F-40FF-96AF-FBFF8250E3EF}"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  version="8"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8">
                  <properties>
                    <property
                      name="SourceCode"
                      state="cdata"
                      dataType="System.String"
                      isArray="true"
                      description="Stores the source code of the component">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
      Row.ErrorDescription = this.ComponentMetaData.GetErrorDescription(Row.ErrorCode);
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_f3f66d9f8ff5447a98949db6594769ca.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{20CD423A-D4B9-4DBC-849C-095C032D8F8F}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_f3f66d9f8ff5447a98949db6594769ca</RootNamespace>
    <AssemblyName>SC_f3f66d9f8ff5447a98949db6594769ca</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f3f66d9f8ff5447a98949db6594769ca.Properties.Settings.get_Default():SC_f3f66d9f8ff5447a98949db6594769ca.Properties.Sett" +
    "ings")]

namespace SC_f3f66d9f8ff5447a98949db6594769ca.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 ErrorCode
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[0]);
        }
    }
    public bool ErrorCode_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String ErrorDescription
    {
        set
        {
            this[1] = value;
        }
    }
    public bool ErrorDescription_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_f3f66d9f8ff5447a98949db6594769ca</msb:CodeName>
		<msb:DisplayName>SC_f3f66d9f8ff5447a98949db6594769ca</msb:DisplayName>
		<msb:ProjectId>{8AE14899-A36D-4C0F-83B2-A1275FA38E68}</msb:ProjectId>
		<msb:Language>msBuild</msb:Language>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_f3f66d9f8ff5447a98949db6594769ca.csproj"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_f3f66d9f8ff5447a98949db6594769ca")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Blue Car Software")]
[assembly: AssemblyProduct("SC_f3f66d9f8ff5447a98949db6594769ca")]
[assembly: AssemblyCopyright("Copyright @ Blue Car Software 2012")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f3f66d9f8ff5447a98949db6594769ca.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f3f66d9f8ff5447a98949db6594769ca.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f3f66d9f8ff5447a98949db6594769ca.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_f3f66d9f8ff5447a98949db6594769ca.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_f3f66d9f8ff5447a98949db6594769ca.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      name="BinaryCode"
                      state="cdata"
                      dataType="System.String"
                      isArray="true"
                      description="Stores the binary representation of the component">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_f3f66d9f8ff5447a98949db6594769ca.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAKz+008AAAAAAAAAAOAAAiELAQgAABQAAAAIAAAAAAAAXjMA
AAAgAAAAQAAAAABAAAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAAgzAABTAAAAAEAAAHAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAZBMAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHAEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABA
MwAAAAAAAEgAAAACAAUAeCIAAJAQAAABAAAAAAAAAMAhAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAH4CKA0AAAoCAnMQAAAGfQEAAAQCAnMRAAAGfQIAAAQqkgRy
AQAAcBpvDgAACiwVAgUCAygPAAAKDgRzCQAABm8DAAAGKkorBwIDbwQAAAYDbw4AAAYt8SoGKh4C
KBEAAAoqHgIoEgAACipiAwIoEwAACgNvCgAABm8UAAAKbwwAAAYqHgIoAQAABioqAgMEBSgVAAAK
KlICexYAAAoCexcAAAoWlG8YAAAKKiICFigZAAAKKiYCFwMoGgAACipaAywIAhcoGwAACipyEQAA
cHMcAAAKeh4CKB0AAAoqHgIoHgAACio6AigfAAAKAgN9AwAABCo6AigfAAAKAgN9BAAABCoeAigf
AAAKKgATMAMALQAAAAEAABF+BQAABC0gcq4AAHDQBwAAAighAAAKbyIAAApzIwAACgoGgAUAAAR+
BQAABCoafgYAAAQqHgKABgAABCoafgcAAAQqLnMXAAAGgAcAAAQqHgIoJgAACioAtAAAAM7K774B
AAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lv
bj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUw
ODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQ
tAAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAJAFAAAjfgAA/AUAAJAHAAAj
U3RyaW5ncwAAAACMDQAAIAEAACNVUwCsDgAAEAAAACNHVUlEAAAAvA4AANQBAAAjQmxvYgAAAAAA
AAACAAABVxWiAQkBAAAA+iUzABYAAAEAAAAgAAAACAAAAAcAAAAYAAAADwAAACYAAAAPAAAAAQAA
AAMAAAAHAAAACAAAAAEAAAAFAAAAAQAAAAAACgABAAAAAAAGAO4AzQAGAP4AzQAKABsBFAEOADcB
IgESAHYBzQAGAIUBzQAKAK8CngIKAOACywIKALkDnwMKAOQD0gMKAPsD0gMKABgE0gMKADcE0gMK
AFAE0gMKAGkE0gMKAIQE0gMKAJ8E0gMKALgE0gMKAPEE0QQKABEF0QQKAFMFFAEKAFoFFAEGAIMF
zQAWAPcFzgUKAFsGFAEKAIgGdQYKAKUGFAEKAKoGFAEKAM4G0gMOAPoG5AYOABMH5AYKACgH0QQA
AAAAAQAAAAAAAQABAAEAEAAyAAAABQABAAEAAQAQAEAAAAAIAAMABQABABAASwAAAAkAAwAJAAEA
EABYAAAADQADABAAAQAQAGQAAAANAAQAEQAAABAAbgB4AA0ABQASAAABEACnAHgAEQAHABYABgBY
ABMABgBkABcAAQCOAlcAAQCOAlcAEQC/AmEAEQDsAmUAEQAwA4MAUCAAAAAAhhhPARsAAQBwIAAA
AADGAJMBHwABAJUgAAAAAMYBoAEpAAUAqCAAAAAAxgG0ASkABgCqIAAAAADGAMsBGwAHALIgAAAA
AMYA1gEbAAcAuiAAAAAAxgC0ASkABwDTIAAAAACGGE8BGwAIANsgAAAAAIYYTwEvAAgA5iAAAAAA
hgjiATkACwD7IAAAAACGCPABPQALAAQhAAAAAIYIBQJBAAsADiEAAAAAhggaAkYADAAlIQAAAACG
ADYCPQANAC0hAAAAAIYAPgI9AA0ANSEAAAAAhhhPAVsADQBEIQAAAACGGE8BWwAOAFMhAAAAAIMY
TwEbAA8AXCEAAAAAkwj8AmkADwCVIQAAAACTCBADbgAPAJwhAAAAAJMIHANzAA8ApCEAAAAAlghA
A4cAEAC3IQAAAACGGE8BGwAQAKshAAAAAJEYQwfxABAAAAABAFQDAAACAFwDAAADAGYDAAAEAG0D
AAABAGYDAAABAHcDAAABAHcDAAABAGYDAAACAHsDAAADAG0DAAABAI8DAAABAI8DAAABAJUDAAAB
AJUDAAABAI8DSQBPAUEAUQBPAUEAWQBPAUEAYQBPAUEAaQBPAUEAcQBPAUEAeQBPAUEAgQBPAUEA
iQBPAUEAkQBPAUEAmQBPAZEAoQBPARsACQBPARsAqQBrBZYACQByBZ0AuQBPARsACQDLARsACQDW
ARsACQAQBqgAwQAmBq0AEQBPAS8AEQBmA7IAEQB7A7YAKQA6BroAEQBDBr8AEQBKBsQAEQBTBpEA
yQBPAUEAEQA2Aj0AEQA+Aj0AGQBPARsA0QBPARsA2QC8BsoA2QDXBtEAOQBPAdYA8QBPAeIAAQFP
ARsAIQBPARsALgAbAGYBLgBjALQBLgALAPUALgATAD0BLgAjAGYBLgArAGwBLgAzAD0BLgA7AIMB
LgBDAGYBLgBbAKsBYwCDAKMAqQAjAegAyQAjAegA4QArAaMA4wADAaMA3QAEAAEABwAFAAgABwAA
AEoCSwAAAFQCTwAAAGUCUwAAAHYCTwAAAK8CeQAAACgDfgAAAEwDjAACAAoAAwACAAsABQABAAwA
BwABAA0ACQACABMACwACABQADQABABUADQACABYADwAEgAAAAQAAAL8RFn4AAAAAAAAvBQAACwAA
AAAAAAAAAAAAAQCwAAAAAAAEAAAAAAAAAAAAAAAKAAsBAAAAAAQAAAAAAAAAAAAAAAoAFAEAAAAA
CwAAAAAAAAAAAAAAAQBVAQAAAAALAAAAAAAAAAAAAAABAKoFAAAAAAAAAAABAAAASgcAAAAAADxN
b2R1bGU+AFNDX2YzZjY2ZDlmOGZmNTQ0N2E5ODk0OWRiNjU5NDc2OWNhLmRsbABVc2VyQ29tcG9u
ZW50AFNjcmlwdE1haW4ASW5wdXQwQnVmZmVyAENvbm5lY3Rpb25zAFZhcmlhYmxlcwBSZXNvdXJj
ZXMAU0NfZjNmNjZkOWY4ZmY1NDQ3YTk4OTQ5ZGI2NTk0NzY5Y2EuUHJvcGVydGllcwBTZXR0aW5n
cwBNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBp
cGVsaW5lAFNjcmlwdENvbXBvbmVudABTY3JpcHRCdWZmZXIAbXNjb3JsaWIAU3lzdGVtAE9iamVj
dABTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQAuY3RvcgBNaWNy
b3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABQaXBlbGluZUJ1ZmZlcgBPdXRwdXROYW1lTWFw
AFByb2Nlc3NJbnB1dABJbnB1dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cA
UHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQBnZXRfRXJyb3JDb2RlAGdldF9FcnJvckNvZGVfSXNOdWxs
AHNldF9FcnJvckRlc2NyaXB0aW9uAHNldF9FcnJvckRlc2NyaXB0aW9uX0lzTnVsbABOZXh0Um93
AEVuZE9mUm93c2V0AEVycm9yQ29kZQBFcnJvckNvZGVfSXNOdWxsAEVycm9yRGVzY3JpcHRpb24A
RXJyb3JEZXNjcmlwdGlvbl9Jc051bGwAUGFyZW50Q29tcG9uZW50AFN5c3RlbS5SZXNvdXJjZXMA
UmVzb3VyY2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJ
bmZvAHJlc291cmNlQ3VsdHVyZQBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9D
dWx0dXJlAEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQASW5wdXRJ
RABJbnB1dE5hbWUAQnVmZmVyAE91dHB1dE1hcABSb3cAQnVmZmVyQ29sdW1uSW5kZXhlcwB2YWx1
ZQBDb21wb25lbnQAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRy
aWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURl
c2NyaXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJs
eUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJp
Z2h0QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0
dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJT
ZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmls
aXR5QXR0cmlidXRlAFNDX2YzZjY2ZDlmOGZmNTQ0N2E5ODk0OWRiNjU5NDc2OWNhAFN0cmluZwBT
dHJpbmdDb21wYXJpc29uAEVxdWFscwBHZXRDb2x1bW5JbmRleGVzAFNTSVNTY3JpcHRDb21wb25l
bnRFbnRyeVBvaW50QXR0cmlidXRlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUGlwZWxpbmVXcmFw
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBwZXIASURUU0NvbXBvbmVudE1l
dGFEYXRhMTAwAGdldF9Db21wb25lbnRNZXRhRGF0YQBHZXRFcnJvckRlc2NyaXB0aW9uAEdldElu
dDMyAElzTnVsbABzZXRfSXRlbQBTZXROdWxsAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24AU3lz
dGVtLkRpYWdub3N0aWNzAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUAVHlwZQBSdW50aW1l
VHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBBc3NlbWJseQBnZXRfQXNzZW1ibHkAU3lzdGVt
LkNvbXBvbmVudE1vZGVsAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVT
dGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQAuY2N0b3IAU0NfZjNmNjZkOWY4ZmY1NDQ3
YTk4OTQ5ZGI2NTk0NzY5Y2EuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAAAAAAAPSQBu
AHAAdQB0ACAAMAAAgJtJAHMATgB1AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0
ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYA
YQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AAHFT
AEMAXwBmADMAZgA2ADYAZAA5AGYAOABmAGYANQA0ADQANwBhADkAOAA5ADQAOQBkAGIANgA1ADkA
NAA3ADYAOQBjAGEALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAKnI
yRGtqrlNn/dWAScSkPkACImEXc2AgMyRCLd6XFYZNOCJAwYSFAMGEhgDIAABCSAEAQgOEhUSGQUg
AQESEAkgAwESFR0IEhkDIAAIAyAAAgQgAQEOBCABAQIDKAAIAygAAgMoAA4DBhIFBSABARIFAwYS
HQMGEiEEAAASHQQAABIhBQABARIhBAgAEh0ECAASIQMGEiAEAAASIAQIABIgBCABAQgGIAICDhFZ
BSABHQgIBAEAAAAEIAASYQQgAQ4IAwYSFQMGHQgEIAEICAQgAQIIBSACAQgcBgABEm0RcQQgABJ1
BiACAQ4SdQQHARIdBSABARF9CAEAAgAAAAAAAwAAAUcBABouTkVURnJhbWV3b3JrLFZlcnNpb249
djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNCgBACNTQ19mM2Y2
NmQ5ZjhmZjU0NDdhOTg5NDlkYjY1OTQ3NjljYQAABQEAAAAAFgEAEUJsdWUgQ2FyIFNvZnR3YXJl
AAAnAQAiQ29weXJpZ2h0IEAgQmx1ZSBDYXIgU29mdHdhcmUgMjAxMgAACAEACAAAAAAAHgEAAQBU
AhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQAwMwAAAAAAAAAAAABOMwAAACAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAQDMAAAAAAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8l
ACBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAAAYBAAAAAAAAAAAAAAYBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAFn6/EQAAAQAWfr8RPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEeAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVAMAAAEAMAAwADAA
MAAwADQAYgAwAAAARAASAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAABCAGwAdQBlACAAQwBh
AHIAIABTAG8AZgB0AHcAYQByAGUAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8A
bgAAAAAAUwBDAF8AZgAzAGYANgA2AGQAOQBmADgAZgBmADUANAA0ADcAYQA5ADgAOQA0ADkAZABi
ADYANQA5ADQANwA2ADkAYwBhAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4A
MAAuADQANQA0ADMALgAzADIAMgA3ADgAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBl
AAAAUwBDAF8AZgAzAGYANgA2AGQAOQBmADgAZgBmADUANAA0ADcAYQA5ADgAOQA0ADkAZABiADYA
NQA5ADQANwA2ADkAYwBhAC4AZABsAGwAAABsACMAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBo
AHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIABCAGwAdQBlACAAQwBhAHIAIABTAG8AZgB0AHcA
YQByAGUAIAAyADAAMQAyAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBl
AAAAUwBDAF8AZgAzAGYANgA2AGQAOQBmADgAZgBmADUANAA0ADcAYQA5ADgAOQA0ADkAZABiADYA
NQA5ADQANwA2ADkAYwBhAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAA
AFMAQwBfAGYAMwBmADYANgBkADkAZgA4AGYAZgA1ADQANAA3AGEAOQA4ADkANAA5AGQAYgA2ADUA
OQA0ADcANgA5AGMAYQAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAw
AC4ANAA1ADQAMwAuADMAMgAyADcAOAAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIA
cwBpAG8AbgAAADEALgAwAC4ANAA1ADQAMwAuADMAMgAyADcAOAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAYDMAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      name="VSTAProjectName"
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      typeConverter="NOTBROWSABLE">SC_f3f66d9f8ff5447a98949db6594769ca</property>
                    <property
                      name="ScriptLanguage"
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                    <property
                      name="ReadOnlyVariables"
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      name="ReadWriteVariables"
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      name="BreakpointCollection"
                      dataType="System.String"
                      isArray="true"
                      description="List of breakpoints present on the script."
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      name="MetadataChecksum"
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      typeConverter="NOTBROWSABLE">4f80429439dfc6d468500b8cbec3d3ee</property>
                    <property
                      name="UserComponentTypeName"
                      dataType="System.String">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach File in Folder\Extract Sample Currency Data\Get Error Description.Inputs[Input 0]"
                      name="Input 0"
                      hasSideEffects="true">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Get Error Description.Inputs[Input 0].Columns[ErrorCode]"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Currency Key.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          cachedName="ErrorCode"
                          cachedDataType="i4" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach File in Folder\Extract Sample Currency Data\Get Error Description.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\Foreach File in Folder\Extract Sample Currency Data\Get Error Description.Inputs[Input 0]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Get Error Description.Outputs[Output 0].Columns[ErrorDescription]"
                          name="ErrorDescription"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Get Error Description.Outputs[Output 0].Columns[ErrorDescription]"
                          length="50"
                          dataType="wstr" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Currency Key"
                  name="Lookup Currency Key"
                  componentClassID="{671046B0-AA63-4C9F-90E4-C06E0B710CE3}"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  usesDispositions="true"
                  version="6"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6">
                  <properties>
                    <property
                      name="SqlCommand"
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
                      expressionType="Notify">select * from (select * from [dbo].[DimCurrency]) as refTable
where [refTable].[CurrencyAlternateKey] = 'ARS'
OR
[refTable].[CurrencyAlternateKey] = 'AUD'
OR
[refTable].[CurrencyAlternateKey] = 'BRL'
OR
[refTable].[CurrencyAlternateKey] = 'CAD'
OR
[refTable].[CurrencyAlternateKey] = 'CNY'
OR
[refTable].[CurrencyAlternateKey] = 'DEM'
OR
[refTable].[CurrencyAlternateKey] = 'EUR'
OR
[refTable].[CurrencyAlternateKey] = 'FRF'
OR
[refTable].[CurrencyAlternateKey] = 'GBP'
OR
[refTable].[CurrencyAlternateKey] = 'JPY'
OR
[refTable].[CurrencyAlternateKey] = 'MXN'
OR
[refTable].[CurrencyAlternateKey] = 'SAR'
OR
[refTable].[CurrencyAlternateKey] = 'USD'
OR
[refTable].[CurrencyAlternateKey] = 'VEB'</property>
                    <property
                      name="SqlCommandParam"
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
                      expressionType="Notify">select * from (select * from (select * from [dbo].[DimCurrency]) as refTable
where [refTable].[CurrencyAlternateKey] = 'ARS'
OR
[refTable].[CurrencyAlternateKey] = 'AUD'
OR
[refTable].[CurrencyAlternateKey] = 'BRL'
OR
[refTable].[CurrencyAlternateKey] = 'CAD'
OR
[refTable].[CurrencyAlternateKey] = 'CNY'
OR
[refTable].[CurrencyAlternateKey] = 'DEM'
OR
[refTable].[CurrencyAlternateKey] = 'EUR'
OR
[refTable].[CurrencyAlternateKey] = 'FRF'
OR
[refTable].[CurrencyAlternateKey] = 'GBP'
OR
[refTable].[CurrencyAlternateKey] = 'JPY'
OR
[refTable].[CurrencyAlternateKey] = 'MXN'
OR
[refTable].[CurrencyAlternateKey] = 'SAR'
OR
[refTable].[CurrencyAlternateKey] = 'USD'
OR
[refTable].[CurrencyAlternateKey] = 'VEB') [refTable]
where [refTable].[CurrencyAlternateKey] = ?</property>
                    <property
                      name="ConnectionType"
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      name="CacheType"
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      typeConverter="CacheType">0</property>
                    <property
                      name="NoMatchBehavior"
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      typeConverter="LookupNoMatchBehavior">0</property>
                    <property
                      name="NoMatchCachePercentage"
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset.">0</property>
                    <property
                      name="MaxMemoryUsage"
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform.">25</property>
                    <property
                      name="MaxMemoryUsage64"
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform.">25</property>
                    <property
                      name="ReferenceMetadataXml"
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format.">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="CurrencyKey" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="CurrencyAlternateKey" dataType="DT_WSTR" length="3" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="CurrencyName" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      name="ParameterMap"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      containsID="true">#{Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[Flat File Source Output].Columns[CurrencyID]};</property>
                    <property
                      name="DefaultCodePage"
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source.">1252</property>
                    <property
                      name="TreatDuplicateKeysAsError"
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used.">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Currency Key.Connections[OleDbConnection]"
                      name="OleDbConnection"
                      description="Connection manager used to access lookup data."
                      connectionManagerID="Package.ConnectionManagers[localhost.AdventureWorksDW2012]"
                      connectionManagerRefId="Package.ConnectionManagers[localhost.AdventureWorksDW2012]" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Currency Key.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Currency Key.Inputs[Lookup Input].Columns[CurrencyID]"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[Flat File Source Output].Columns[CurrencyID]"
                          cachedName="CurrencyID"
                          cachedDataType="wstr"
                          cachedLength="3">
                          <properties>
                            <property
                              name="JoinToReferenceColumn"
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins.">CurrencyAlternateKey</property>
                            <property
                              name="CopyFromReferenceColumn"
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied." />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Currency Key.Outputs[Lookup Match Output]"
                      name="Lookup Match Output"
                      exclusionGroup="1"
                      synchronousInputId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Currency Key.Inputs[Lookup Input]"
                      errorOrTruncationOperation="Lookup"
                      errorRowDisposition="RedirectRow">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Currency Key.Outputs[Lookup Match Output].Columns[CurrencyKey]"
                          name="CurrencyKey"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Currency Key.Outputs[Lookup Match Output].Columns[CurrencyKey]"
                          dataType="i4"
                          errorOrTruncationOperation="Copy Column"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              name="CopyFromReferenceColumn"
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied.">CurrencyKey</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Currency Key.Outputs[Lookup No Match Output]"
                      name="Lookup No Match Output"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      synchronousInputId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Currency Key.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Currency Key.Outputs[Lookup Error Output]"
                      name="Lookup Error Output"
                      exclusionGroup="1"
                      synchronousInputId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Currency Key.Inputs[Lookup Input]"
                      isErrorOut="true">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Currency Key.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Currency Key.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Currency Key.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Currency Key.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Date Key"
                  name="Lookup Date Key"
                  componentClassID="{671046B0-AA63-4C9F-90E4-C06E0B710CE3}"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  usesDispositions="true"
                  version="6"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6">
                  <properties>
                    <property
                      name="SqlCommand"
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
                      expressionType="Notify">select * from [dbo].[DimDate]</property>
                    <property
                      name="SqlCommandParam"
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
                      expressionType="Notify">select * from (select * from [dbo].[DimDate]) [refTable]
where [refTable].[FullDateAlternateKey] = ?</property>
                    <property
                      name="ConnectionType"
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      name="CacheType"
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      typeConverter="CacheType">1</property>
                    <property
                      name="NoMatchBehavior"
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      typeConverter="LookupNoMatchBehavior">0</property>
                    <property
                      name="NoMatchCachePercentage"
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset.">0</property>
                    <property
                      name="MaxMemoryUsage"
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform.">25</property>
                    <property
                      name="MaxMemoryUsage64"
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform.">25</property>
                    <property
                      name="ReferenceMetadataXml"
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format.">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="DateKey" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="FullDateAlternateKey" dataType="DT_DBDATE" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="DayNumberOfWeek" dataType="DT_UI1" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="EnglishDayNameOfWeek" dataType="DT_WSTR" length="10" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="SpanishDayNameOfWeek" dataType="DT_WSTR" length="10" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="FrenchDayNameOfWeek" dataType="DT_WSTR" length="10" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="DayNumberOfMonth" dataType="DT_UI1" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="DayNumberOfYear" dataType="DT_I2" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="WeekNumberOfYear" dataType="DT_UI1" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="EnglishMonthName" dataType="DT_WSTR" length="10" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="SpanishMonthName" dataType="DT_WSTR" length="10" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="FrenchMonthName" dataType="DT_WSTR" length="10" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="MonthNumberOfYear" dataType="DT_UI1" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="CalendarQuarter" dataType="DT_UI1" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="CalendarYear" dataType="DT_I2" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="CalendarSemester" dataType="DT_UI1" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="FiscalQuarter" dataType="DT_UI1" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="FiscalYear" dataType="DT_I2" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="FiscalSemester" dataType="DT_UI1" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      name="ParameterMap"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      containsID="true">#{Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[Flat File Source Output].Columns[CurrencyDate]};</property>
                    <property
                      name="DefaultCodePage"
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source.">1252</property>
                    <property
                      name="TreatDuplicateKeysAsError"
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used.">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Date Key.Connections[OleDbConnection]"
                      name="OleDbConnection"
                      description="Connection manager used to access lookup data."
                      connectionManagerID="Package.ConnectionManagers[localhost.AdventureWorksDW2012]"
                      connectionManagerRefId="Package.ConnectionManagers[localhost.AdventureWorksDW2012]" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Date Key.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Date Key.Inputs[Lookup Input].Columns[CurrencyDate]"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[Flat File Source Output].Columns[CurrencyDate]"
                          cachedName="CurrencyDate"
                          cachedDataType="dbDate">
                          <properties>
                            <property
                              name="JoinToReferenceColumn"
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins.">FullDateAlternateKey</property>
                            <property
                              name="CopyFromReferenceColumn"
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied." />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Date Key.Outputs[Lookup Match Output]"
                      name="Lookup Match Output"
                      exclusionGroup="1"
                      synchronousInputId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Date Key.Inputs[Lookup Input]"
                      errorOrTruncationOperation="Lookup"
                      errorRowDisposition="FailComponent">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Date Key.Outputs[Lookup Match Output].Columns[DateKey]"
                          name="DateKey"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Date Key.Outputs[Lookup Match Output].Columns[DateKey]"
                          dataType="i4"
                          errorOrTruncationOperation="Copy Column"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              name="CopyFromReferenceColumn"
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied.">DateKey</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Date Key.Outputs[Lookup No Match Output]"
                      name="Lookup No Match Output"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      synchronousInputId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Date Key.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Date Key.Outputs[Lookup Error Output]"
                      name="Lookup Error Output"
                      exclusionGroup="1"
                      synchronousInputId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Date Key.Inputs[Lookup Input]"
                      isErrorOut="true">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Date Key.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Date Key.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Date Key.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Date Key.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach File in Folder\Extract Sample Currency Data\Sample OLE DB Destination"
                  name="Sample OLE DB Destination"
                  componentClassID="{4ADA7EAA-136C-4215-8098-D7A7C27FC0D1}"
                  description="OLE DB Destination"
                  usesDispositions="true"
                  version="4"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4">
                  <properties>
                    <property
                      name="CommandTimeout"
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out.">0</property>
                    <property
                      name="OpenRowset"
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset.">[dbo].[FactCurrency]</property>
                    <property
                      name="OpenRowsetVariable"
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."></property>
                    <property
                      name="SqlCommand"
                      dataType="System.String"
                      description="The SQL command to be executed."
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      name="DefaultCodePage"
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source.">1252</property>
                    <property
                      name="AlwaysUseDefaultCodePage"
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data.">false</property>
                    <property
                      name="AccessMode"
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      typeConverter="AccessMode">3</property>
                    <property
                      name="FastLoadKeepIdentity"
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on.">false</property>
                    <property
                      name="FastLoadKeepNulls"
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on.">false</property>
                    <property
                      name="FastLoadOptions"
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on.">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      name="FastLoadMaxInsertCommitSize"
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on.">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach File in Folder\Extract Sample Currency Data\Sample OLE DB Destination.Connections[OleDbConnection]"
                      name="OleDbConnection"
                      description="The OLE DB runtime connection used to access the database."
                      connectionManagerID="Package.ConnectionManagers[localhost.AdventureWorksDW2012]"
                      connectionManagerRefId="Package.ConnectionManagers[localhost.AdventureWorksDW2012]" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach File in Folder\Extract Sample Currency Data\Sample OLE DB Destination.Inputs[OLE DB Destination Input]"
                      name="OLE DB Destination Input"
                      hasSideEffects="true"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Sample OLE DB Destination.Inputs[OLE DB Destination Input].Columns[AverageRate]"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[Flat File Source Output].Columns[AverageRate]"
                          externalMetadataColumnId="Package\Foreach File in Folder\Extract Sample Currency Data\Sample OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AverageRate]"
                          cachedName="AverageRate"
                          cachedDataType="r4" />
                        <inputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Sample OLE DB Destination.Inputs[OLE DB Destination Input].Columns[EndOfDayRate]"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[Flat File Source Output].Columns[EndOfDayRate]"
                          externalMetadataColumnId="Package\Foreach File in Folder\Extract Sample Currency Data\Sample OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EndOfDayRate]"
                          cachedName="EndOfDayRate"
                          cachedDataType="r4" />
                        <inputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Sample OLE DB Destination.Inputs[OLE DB Destination Input].Columns[CurrencyKey]"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Currency Key.Outputs[Lookup Match Output].Columns[CurrencyKey]"
                          externalMetadataColumnId="Package\Foreach File in Folder\Extract Sample Currency Data\Sample OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CurrencyKey]"
                          cachedName="CurrencyKey"
                          cachedDataType="i4" />
                        <inputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Sample OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DateKey]"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Date Key.Outputs[Lookup Match Output].Columns[DateKey]"
                          externalMetadataColumnId="Package\Foreach File in Folder\Extract Sample Currency Data\Sample OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DateKey]"
                          cachedName="DateKey"
                          cachedDataType="i4" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Sample OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CurrencyKey]"
                          name="CurrencyKey"
                          dataType="i4" />
                        <externalMetadataColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Sample OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DateKey]"
                          name="DateKey"
                          dataType="i4" />
                        <externalMetadataColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Sample OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AverageRate]"
                          name="AverageRate"
                          dataType="r4" />
                        <externalMetadataColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Sample OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EndOfDayRate]"
                          name="EndOfDayRate"
                          dataType="r4" />
                        <externalMetadataColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Sample OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CurrencyID]"
                          name="CurrencyID"
                          dataType="wstr"
                          length="3" />
                        <externalMetadataColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Sample OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CurrencyDate]"
                          name="CurrencyDate"
                          dataType="dbDate" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach File in Folder\Extract Sample Currency Data\Sample OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      name="OLE DB Destination Error Output"
                      exclusionGroup="1"
                      synchronousInputId="Package\Foreach File in Folder\Extract Sample Currency Data\Sample OLE DB Destination.Inputs[OLE DB Destination Input]"
                      isErrorOut="true">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Sample OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Sample OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Sample OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Sample OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach File in Folder\Extract Sample Currency Data.Paths[Flat File Source Output]"
                  name="Flat File Source Output"
                  startId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[Flat File Source Output]"
                  endId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Currency Key.Inputs[Lookup Input]" />
                <path
                  refId="Package\Foreach File in Folder\Extract Sample Currency Data.Paths[Lookup Error Output]"
                  name="Lookup Error Output"
                  startId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Currency Key.Outputs[Lookup Error Output]"
                  endId="Package\Foreach File in Folder\Extract Sample Currency Data\Get Error Description.Inputs[Input 0]" />
                <path
                  refId="Package\Foreach File in Folder\Extract Sample Currency Data.Paths[Lookup Match Output]"
                  name="Lookup Match Output"
                  startId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Date Key.Outputs[Lookup Match Output]"
                  endId="Package\Foreach File in Folder\Extract Sample Currency Data\Sample OLE DB Destination.Inputs[OLE DB Destination Input]" />
                <path
                  refId="Package\Foreach File in Folder\Extract Sample Currency Data.Paths[Lookup Match Output1]"
                  name="Lookup Match Output"
                  startId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Currency Key.Outputs[Lookup Match Output]"
                  endId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Date Key.Inputs[Lookup Input]" />
                <path
                  refId="Package\Foreach File in Folder\Extract Sample Currency Data.Paths[Output 0]"
                  name="Output 0"
                  startId="Package\Foreach File in Folder\Extract Sample Currency Data\Get Error Description.Outputs[Output 0]"
                  endId="Package\Foreach File in Folder\Extract Sample Currency Data\Failed Rows.Inputs[Flat File Destination Input]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:VariableName="User::varFileName"
          DTS:ValueIndex="0"
          DTS:ObjectName="{848111F9-479B-42B0-AB07-DB28489A7EDF}"
          DTS:DTSID="{848111F9-479B-42B0-AB07-DB28489A7EDF}"
          DTS:CreationName="" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="240,42"
          Id="Package\Foreach File in Folder\Extract Sample Currency Data"
          TopLeft="5.5,7.00000273480134" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="250,104"
          Size="250,147"
          Id="Package\Foreach File in Folder"
          TopLeft="363.166652195984,144.294119684754" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Foreach File in Folder\Extract Sample Currency Data">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="195,42"
          Id="Package\Foreach File in Folder\Extract Sample Currency Data\Get Error Description"
          TopLeft="446.083315567838,228.000003646402" />
        <NodeLayout
          Size="195,42"
          Id="Package\Foreach File in Folder\Extract Sample Currency Data\Failed Rows"
          TopLeft="446.083315567838,307.294122054915" />
        <NodeLayout
          Size="240,42"
          Id="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Currency Key"
          TopLeft="165.666660043928,140.803923431152" />
        <NodeLayout
          Size="240,42"
          Id="Package\Foreach File in Folder\Extract Sample Currency Data\Sample OLE DB Destination"
          TopLeft="165.666660043928,313.117651337983" />
        <NodeLayout
          Size="240,42"
          Id="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data"
          TopLeft="165.666660043928,54.6470594777368" />
        <NodeLayout
          Size="240,42"
          Id="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Date Key"
          TopLeft="165.666660043928,226.960787384568" />
        <EdgeLayout
          Id="Package\Foreach File in Folder\Extract Sample Currency Data.Paths[Output 0]"
          TopLeft="543.583315567838,270.000003646402">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,37.2941184085132"
              Start="0,0"
              End="0,29.7941184085132">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.7941184085132" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach File in Folder\Extract Sample Currency Data.Paths[Lookup Match Output1]"
          TopLeft="246.999993377262,182.803923431152">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="38.6666666666667,44.1568639534155"
              Start="0,0"
              End="38.6666666666667,36.6568639534155">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.8382033189294" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13.8382033189294"
                    Point2="0,17.8382033189294"
                    Point3="4,17.8382033189294" />
                  <mssgle:LineSegment
                    End="34.6666666666667,17.8382033189294" />
                  <mssgle:CubicBezierSegment
                    Point1="34.6666666666667,17.8382033189294"
                    Point2="38.6666666666667,17.8382033189294"
                    Point3="38.6666666666667,21.8382033189294" />
                  <mssgle:LineSegment
                    End="38.6666666666667,36.6568639534155" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-27.8580533854167,22.8382033189294,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach File in Folder\Extract Sample Currency Data.Paths[Lookup Match Output]"
          TopLeft="285.666660043928,268.960787384568">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,44.1568639534154"
              Start="0,0"
              End="0,36.6568639534154">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.6568639534154" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-47.19138671875,13.5237444767077,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach File in Folder\Extract Sample Currency Data.Paths[Lookup Error Output]"
          TopLeft="324.333326710595,182.803923431152">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="219.249988857243,45.1960802152495"
              Start="0,0"
              End="219.249988857243,37.6960802152495">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.2580191598028" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.2580191598028"
                    Point2="0,18.2580191598028"
                    Point3="4,18.2580191598028" />
                  <mssgle:LineSegment
                    End="215.249988857243,18.2580191598028" />
                  <mssgle:CubicBezierSegment
                    Point1="215.249988857243,18.2580191598028"
                    Point2="219.249988857243,18.2580191598028"
                    Point3="219.249988857243,22.2580191598028" />
                  <mssgle:LineSegment
                    End="219.249988857243,37.6960802152495" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="64.7586077098715,23.2580191598028,91.7327734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach File in Folder\Extract Sample Currency Data.Paths[Flat File Source Output]"
          TopLeft="285.666660043928,96.6470594777368">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,44.1568639534155"
              Start="0,0"
              End="0,36.6568639534155">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.6568639534155" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="The data flow extracts data from a file, looks up values in the&#xA;CurrencyKey column in the DimCurrency table and the DateKey&#xA;column in the DimDate table, and writes the  data to the &#xA;FactCurrencyRate table."
          ParentId="Package\Foreach File in Folder\Extract Sample Currency Data"
          FontInfo="{assembly:Null}"
          Size="365,90"
          Id="4a76f81e-aa6f-44c6-9507-6fe82c044c1f"
          TopLeft="746.999972979229,35.0588241192708" />
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Currency Key">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach File in Folder\Extract Sample Currency Data\Sample OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Date Key">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[DimDate]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>